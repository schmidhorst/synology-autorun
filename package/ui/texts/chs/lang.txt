#!/bin/bash
# This file was generated via DeepL machine translation from en
# Filename: <lng>/lang.txt - coded in utf-8
# Language variables for cgi pages in the user language
# --------------------------------------------------------------
displaynameINFO="自动运行"
descriptionINFO="在外部驱动器（USB/eSATA）连接到磁盘站后，在其上/为其运行一个脚本。"
LoginRequired="需要登录"
PleaseLogin="在使用本网页之前，请先以管理员身份登录。"
settingsTitle="实际的$app_name设置。"
logTitleExec="行动日志（设备附件、脚本执行和设备弹出）。"
logTitleDetail="活动的调试日志。实际的日志级别是'$LOGLEVEL'。"
settingFingerprint="具有root权限的脚本的执行是一个安全风险，特别是如果它被配置在外部存储器上的位置。可以将执行限制在与先前注册的 SHA256 校验和相匹配的脚本上。<br>0: 没有限制。以前注册的校验和被保留。<br>1: 如果有以前注册的校验和，它们被删除。<br>2: 所有的脚本都是允许的，如果以前没有注册过，它们的校验和也会被注册。<br>3: 只有以前注册过的校验和的脚本才被允许。"
settingSecurityWarning="<span style=\"color:red\"><b>注意：</b></span>将脚本变体a)（外部USB/eSATA设备上的脚本）与指纹设置0或2结合起来，会有严重的安全风险。外置存储设备上有任意内容的脚本在插入时被执行，并且可以访问所有的东西!插上它就足以破坏或窃取你的Synology NAS上的数据!"
settingScript="变体a:该脚本位于外部存储设备的根目录下，并被设置为用户 \"root \"的可执行文件。<br>变量b：脚本被赋予了它的完整路径，并且位于NAS上。<br>它获得设备的挂载点（例如/volumeUSB1/usbshare/）作为第一个参数（1美元）和设备分区（例如usb1p1）作为第二个参数（2美元）。它需要对 \"root \"来说是可执行的。对于'root'来说，在DSM7中使用的是shell'ash'。但是/bin/ash可能是对'bash'的链接（至少在DS220 上）。脚本是在一个空的环境下开始的!所以没有设置PATH。你必须为每个命令使用完整的路径（例如：/bin/echo \"...\", /bin/printf ...）。如果由于缺少路径而没有找到命令，你的脚本可能会以退出代码2停止。在你的脚本的第一行，你可以使用'unset PATH'来使脚本的调试运行具有相同的条件。或者你在你的脚本的开头添加一行像'PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/syno/bin:/usr/syno/bin:/usr/local/sbin:/usr/local/bin'。"
settingScriptAfter="如果脚本以某些定义的退出代码退出，那么autorun将弹出该存储设备，然后再调用这第二个脚本。这一点是可选的。典型的用法是通过一个智能电源适配器给一个有外部电源的硬盘断电。"
settingTries="自动运行的时间（以秒为单位），应该在多长时间内搜索一个已安装的驱动器。当你遇到 \"无法找到挂载点 \"的错误时，增加这个值。"
settingWait="在启动脚本之前，检测到安装后有一个额外的等待时间（秒）。在某些情况下，需要有几秒钟的延迟才能正确地访问驱动器。"
settingBeep="如果设置为 \"true\"，当找到一个脚本时就会发出短促的哔声。而在出错的情况下，会发出三倍的长哔声。"
settingLedStatus="状态LED可以用来显示脚本的状态。<br>0：状态LED不被这个包使用。<br>1: 脚本运行时绿色，弹出时绿色闪烁，如果以0或为弹出定义的代码之一完成，则关闭，其他结果或弹出失败则橙色闪烁<br/>2: 脚本运行或弹出时绿色闪烁，如果以0或为弹出定义的代码之一完成，则绿色，其他结果或弹出失败则橙色闪烁<br/>3: 脚本运行和弹出时绿色，完成后关闭，弹出失败则橙色闪烁。"
settingLedCopy="状态LED也可以用来显示脚本的状态。<br>0：拷贝LED不被这个软件包使用。<br>1: 运行中或弹出时打开，之后关闭<br/>2: 运行中或弹出时闪烁，之后关闭<br/>3: 运行中或弹出时打开，之后关闭（0或弹出时的其中一个代码）或闪烁（其他代码）<br/>4：运行或弹出时闪烁，之后关闭或闪烁（其他代码或弹出失败）<br/>5：运行或弹出时闪烁，之后关闭（0或带弹出的代码之一）或打开（其他代码或弹出失败）。"
settingNoDsmMessageReturnCodes="通常情况下，在你的脚本完成后会有一条DSM桌面信息产生。这个信息包含了你的脚本的返回代码和存储设备上的剩余空间。如果你的脚本以这里给出的代码之一退出，那么就不会产生这样的消息。在软件包的日志文件中仍然会产生一个条目。"
settingEjectTimeout="如果在为设备弹出配置退出代码的情况下，外部驱动器不能被弹出（因为它很忙），这就给出了在终止弹出尝试之前的超时时间（秒），并出现错误。"
settingLogMaxLines="为了避免日志文件占用过多的空间，如果行数达到给定的数字，则删除文件的前一半。"
settingLogVerbose="有几个细节级别可用于将信息写入调试日志文件。1 ... 8.值越高，细节越多。"
settingNotifyUsers="该软件包生成桌面通知，显示给可配置的用户或用户组。一个以'@'开头的名字是一个组名，这样它就会显示给所有这些成员。<br>提示：<br>管理员也是<code>@users</code>组的成员。<br>使用命令<code>/usr/syno/bin/synodsmnotify -c\"SYNO.SDS._ThirdParty.App.autorun\"\"@users\"\"autorun:app1:title02\"\"autorun:app1:msg0\"\"<Your message text>\"</code>你可以从你的脚本中生成额外的信息。"
settingHeadlineFingerprints="目前注册的脚本文件的SHA256校验和（指纹）。"
settingCapture="你的脚本（或脚本）输出到stdout的结果可以被插入到Autorun的日志中：<br>0：输出不被捕获。<br>1：输出被插入到Autorun的主操作日志中。<br>2：输出被插入到调试日志中。"
settingsEjectReturnCodes="你的脚本可以用一个返回码0 ... 退出。255.你可以指定一些返回代码或返回代码的范围，在你的脚本完成后，外部存储设备会被弹出。"
settingFailureCodes="脚本的退出代码列表，这些代码被认为是失败的，可能由LED灯或蜂鸣器发出信号。"
settingCGIDEBUG="&lt;empty&gt;：执行index.cgi和settings.cgi时不产生调试日志条目：执行index.cgi和settings.cgi会产生调试日志条目。这在调试其他问题时可能会造成混乱。"
runInstallationAgain="你可以再次运行安装程序，以改变设置或删除校验码!"
ledCtrlHint="如果LED指示仍然是一个错误，你可以在这里重置。"
btnLedOff="关闭"
btnLedOn="启用"
btnStatusLedGreen="绿色"
labelStatusLed="状态LED"
labelCopyLed="复制LED"
btnLedFlash="闪光"
btnLedGreenFlash="绿灯闪烁"
btnLedOrangeFlash="橙色闪烁"
btnLedOrange="橙色"
btnDelLog="删除这个日志文件"
btnRefresh="刷新页面"
btnShowDetailLog="显示详细的调试日志文件"
btnShowSimpleLog="显示行动日志文件"
hrefLog="行动日志"
btnShowLicence="许可证"
btnShowSettings="显示设置"
btnDownload="下载 ..."
execLogNA="未找到日志文件或为空。自发射以来，是否有任何要记录的事件？"
HASH_DELETION="<b>以前注册的哈希值现在都被删除了。</b>"
copyPrivilege="<strong>重要提示：</strong>由于第三方软件包在DSM 7.x中受到Synology的限制，因此需要进一步的步骤来完成安装并能够运行该软件包：<br>你需要执行以下命令：<input type='text' size='80' value='sudo cp /var/packages/\$SYNOPKG_PKGNAME/conf/privilege.root /var/packages/\$SYNOPKG_PKGNAME/conf/privilege'> <strong>权限1：</strong><br>打开SSH命令外壳到你的NAS（以管理员身份）并执行上述命令。之后继续并<strong>运行</strong>软件包。<br><strong>可行性2：</strong><br>提示：如果你之前已经做了这个，你可以跳到步骤2.2.<br>2.1：现在在控制面板中进入 \"任务调度器\"，用用户定义的脚本创建一个计划任务。在常规选项卡中设置一个有用的名称并选择 \"root \"作为用户。作为 \"时间表\"，你可以选择一个过去的日期和 \"不重复\"。在 \"任务设置 \"中复制并粘贴上述命令作为 \"用户定义的脚本\"。完成该任务设置并确认警告。<br>2.2：选择生成的任务并<strong>运行</strong>它。<br>2.3：关闭控制面板，也关闭这个对话框。在软件包中心的 \"已安装的软件包 \"中，选择自动运行软件包并<strong>运行</strong>它!"
scriptNA="错误。无法找到 Skript '$f'!"
scriptNAcase="可疑：发现大/小写不同的文件!"
setupCorrection="可能你需要再次运行安装，以纠正设置!"
scriptNexec="错误。Skript '$f'不可执行!"
wrongLineBreakWin="错误。应该执行的Skript '$f'使用了错误的换行符CR/LF（Windows）。请使用一个可编辑的编辑器（Linux oder Windows Notepad  , PSPad, ...）将其改为LF（UNIX）!"
wrongCodePage="错误。应该执行的 Skript '$f' 使用了错误的编码（Windows ISO-8859）。请使用一个可识别的编辑器（Linux oder Windows Notepad  , PSPad, ...），将其改为UTF-8!"
wrongLineBreakMac="错误。应该执行的 Skript '$f'，使用了错误的换行符（MAC）。请使用一个可编辑的编辑器将其改为LF（UNIX）!"
notifyUserError="桌面信息的用户账户'$notyfyUsers'并不存在!因此，错误的条目被'@users'组取代。再次运行安装程序，输入另一个值!"
notifyGroupError="桌面信息的用户组'$notyfyUsers'并不存在!因此用'@users'替换了错误的条目。再次运行安装程序，输入另一个值!"
update_available="<span style='color:red'>GitHub上有一个${app_name}的更新。</span>请将您的版本${local_version}更新为版本"
txtAlertOnlyAdmin="只允许管理员组的成员访问。"
txtLanguageSource="本页的语言是根据你的网络浏览器区域设置选择的。"
preinstDsmVersError="这个软件包版本只能在DSM ${osMin}及以上版本中使用!在你的DSM版本上可能会有更早的软件包版本，见<a target='_blank' rel='noopener noreferrer' href='https://github.com/reidemei/synology-autorun#install'>https://github.com/reidemei/synology-autorun#install</a>。"
details="详情"
notAccepted="许可证尚未接受!"
